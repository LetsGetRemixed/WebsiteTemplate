name: Merge Workflow

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install root dependencies
      run: npm ci
      
    - name: Install client dependencies
      run: |
        cd client
        npm ci
        
    - name: Run linting
      run: |
        npm run lint || echo "Linting not configured yet"
        
    - name: Run tests
      run: |
        npm test || echo "Tests not configured yet"
        
    - name: Build client
      run: |
        cd client
        npm run build
        
    - name: Verify build output
      run: |
        test -d client/dist || (echo "Build failed - dist directory not found" && exit 1)
        echo "✅ Build verification passed"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd client && npm ci
        
    - name: Build project
      run: |
        cd client
        npm run build
        
    - name: Deploy to Firebase (if configured)
      uses: FirebaseExtended/action-hosting-deploy@v0
      if: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_WEBSITE_TEMPLATE != '' }}
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_WEBSITE_TEMPLATE }}'
        channelId: live
        projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
      env:
        FIREBASE_CLI_EXPERIMENTS: webframeworks
        
    - name: Deploy to Vercel (if configured)
      uses: amondnet/vercel-action@v25
      if: ${{ secrets.VERCEL_TOKEN != '' }}
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment completed successfully"
        else
          echo "❌ Deployment failed"
        fi

