name: Deploy to Firebase Hosting and Functions on merge

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      # Frontend ENV
      VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
      # Backend ENV
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      CLIENT_URL: ${{ secrets.CLIENT_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DEBUG_ENV_ENDPOINT: ${{ secrets.DEBUG_ENV_ENDPOINT }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Setup frontend env
      - name: Create .env file for frontend
        run: |
          echo "VITE_BACKEND_URL=${VITE_BACKEND_URL}" > .env
        working-directory: client

      - name: Install Frontend Dependencies
        run: npm ci || npm install
        working-directory: client

      - name: Build Frontend
        run: npm run build
        working-directory: client

      # Setup backend env
      - name: Create .env file for backend
        run: |
          echo "MONGODB_URI=${MONGODB_URI}" > .env
          if [ -n "${CLIENT_URL}" ]; then echo "CLIENT_URL=${CLIENT_URL}" >> .env; fi
          if [ -n "${JWT_SECRET}" ]; then echo "JWT_SECRET=${JWT_SECRET}" >> .env; fi
          if [ -n "${DEBUG_ENV_ENDPOINT}" ]; then echo "DEBUG_ENV_ENDPOINT=${DEBUG_ENV_ENDPOINT}" >> .env; fi
        working-directory: server

      - name: Install Backend Dependencies
        run: npm ci || npm install
        working-directory: server

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Set Firebase Functions environment variables
      - name: Set Firebase Functions Environment Variables
        run: |
          firebase functions:config:set mongodb.uri="${MONGODB_URI}" client.url="${CLIENT_URL}" jwt.secret="${JWT_SECRET}" --project ${{ secrets.FIREBASE_PROJECT_ID }} --token ${{ secrets.FIREBASE_GIT_SECRET }}

      - name: List Frontend Build Directory (optional debug)
        run: ls -la
        working-directory: client/dist

      - name: Deploy to Firebase (Hosting + Functions)
        run: firebase deploy --only hosting,functions --project ${{ secrets.FIREBASE_PROJECT_ID }} --token ${{ secrets.FIREBASE_GIT_SECRET }}

